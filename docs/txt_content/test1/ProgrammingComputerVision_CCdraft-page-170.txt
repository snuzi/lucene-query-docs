def get_cluster_elements(self):
""" Return ids for elements in a cluster sub-tree. """
return self.left.get_cluster,elements() + self.right.get,cluster,elements()

def get,height(self):
""" Return the height of a node,
height is sum of each branch. """
return self.1eft.get,height() + self.right.get,height()

def get_depth(self):
""" Return the depth of a node, depth is
max of each child plus own distance. """
return max(self.left.get_depth(), self.right.get,depth()) + self.distance

class ClusterLeafNode(object):
def __init,,(self,vec,id):
se1f.vec = vec
self.id = id

def extract_clusters(self,dist):
return [self]

def get_cluster_elements(self):
return [self.id]

def get_height(self):
return 1

def get_depth(self):
return 0

def L2dist(vl,v2):
return sqrt(sum((vl-v2)**2))

def Lldist(vl,v2):
return sum(abs(v1â€”v2))

def hcluster(features,distfcn=L2dist):
""" Cluster the rows of features using
hierarchical clustering. """

# cache of distance calculations
distances = {}

170 6.2. Hierarchical Clustering

